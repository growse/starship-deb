---
env:
  PACKAGE_NAME: starship
  PACKAGE_VERSION: v1.14.1
  PACKAGE_DESCRIPTION: The minimal, blazing-fast, and infinitely customizable prompt for any shell!
  BINARY_NAME: starship

name: Build, package and upload
"on":
  push:
    paths-ignore:
      - "*.md"
      - LICENSE
      - .github/renovate.json
      - .gitignore
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        target:
#          - x86_64-unknown-linux-musl
          - arm-unknown-linux-gnueabihf
#          - aarch64-unknown-linux-musl
      fail-fast: true
    steps:

      - uses: actions/checkout@v3
        with:
          repository: starship/starship.git
          ref: ${{ env.PACKAGE_VERSION }}
#      - run: rustup update
      - uses: lhotari/action-upterm@v1
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      - run: cargo install cross
      - name: cargo build
        run: cross build --release --target=${{ matrix.target }}
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: target
          path: target/**/release/${{ env.BINARY_NAME }}
  build-package:
    name: Build Deb Package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust_arch:
          - x86_64-unknown-linux-musl
      fail-fast: true
    needs: build
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: target
      - name: Package
        run: |
          case ${ARCH} in
            x86_64-unknown-linux-musl)
            export DEB_ARCH=amd64;;
          esac
          chmod +x ${ARCH}/release/starship          
          bundle exec fpm -f \
          -s dir \
          -t deb \
          --deb-priority optional \
          --maintainer github@growse.com \
          --vendor https://starship.rs \
          --license ISC \
          -n $DEB_NAME \
          --description "${APP_DESCRIPTION}" \
          --url ${APP_URL} \
          --prefix / \
          -a ${DEB_ARCH} \
          -v ${PACKAGE_VERSION} \
          ${ARCH}/release/starship=/usr/bin/starship
        env:
          DEB_NAME: ${{ env.PACKAGE_NAME }}
          APP_DESCRIPTION: ${{ env.PACKAGE_DESCRIPTION }}
          APP_URL: https://starship.rs
          ARCH: ${{ matrix.rust_arch }}
          PACKAGE_VERSION: ${{ env.PACKAGE_VERSION }}
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: deb-package
          path: "*.deb"
  publish:
    name: Publish
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    needs: build-package
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: deb-package
      - name: Upload to Apt repo
        env:
          APT_CREDENTIALS: ${{ secrets.APT_CREDENTIALS }}
          APT_KEY_PASSPHRASE: ${{ secrets.APT_KEY_PASSPHRASE }}
        run: |
          echo $APT_CREDENTIALS > aptly-auth
          find -type f -name "*.deb" -exec curl -f --netrc-file aptly-auth -XPOST -F file=@{} https://apttoo.growse.com/api/files/starship \;
          export result=$(curl -f --netrc-file aptly-auth -X POST https://apttoo.growse.com/api/repos/defaultrepo/file/starship)
          echo $result
          export failed=$(echo $result | jq '.FailedFiles | length')
          if [[ "$failed" != "0" ]]; then exit 1; fi
          curl -f --netrc-file aptly-auth -X PUT -H"Content-type: application/json" --data '{"Signing":{"Passphrase":"'"$APT_KEY_PASSPHRASE"'","Batch":true}}' https://apttoo.growse.com/api/publish/:./stablish
